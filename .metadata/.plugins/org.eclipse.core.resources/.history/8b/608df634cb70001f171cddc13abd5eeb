package com.book_api.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.book_api.entity.BookEntity;
import com.book_api.repository.Book_Repository;

@Service
public class Book_Service implements IBook_Serviice {
	@Autowired
	Book_Repository book_Repository;

	@Override
	public String createData(BookEntity bookEntity) {
		BookEntity save = book_Repository.save(bookEntity);

		return "data saves Succesfully";
	}

	@Override
	
	public Optional<BookEntity> fetchById( int id) {
		Optional<BookEntity> byId = book_Repository.findById(id);
		
		return byId;
	}

	@Override
	public List<BookEntity> fetchAllData(BookEntity bookEntity) {
		List<BookEntity> all = book_Repository.findAll();
		return all;
	}

	@Override
	public String deleteData(BookEntity bookEntity, int id) {
		book_Repository.delete(bookEntity);
		return "data successfully deleted";
	}

	
	@Override
	public BookEntity updateData(BookEntity bookEntity, int id) {
		BookEntity byId = book_Repository.findById(id).get();
		if (byId!=null) {
			byId.setBook_name(bookEntity.getBook_name());
			byId.setAuthor(bookEntity.getAuthor());
		return	book_Repository.save(byId);
		}else {
			
			throw new RuntimeException("Student not found with id: " + id);
		}
	

	}

	
}
